# web-tips/git-tips
[push]
	default = current
[user]
	email = dule@hey.com
	name = Dusan Orlovic
[core]
	excludesfile = ~/.gitignore_global
[alias]
	add-commit = !git add -A && git commit
	d = diff
	c = commit
	s = status
	st = status
	o = show
	cleanup = "!git branch --merged | grep  -v '\\*\\|master\\|main\\|dev\\|develop' | xargs -n 1 -r git branch -d"
	cleanupnotmine = "!bash -c 'current_user=$(git config user.email);\
  for branch in $(git branch --format=\"%(refname:short)\"); do \
    if [[ \"$branch\" =~ ^(main|develop|master)$ ]]; then \
      continue; \
    fi; \
    author=$(git log -1 --format=\"%ae\" $branch); \
    if [ \"$author\" != \"$current_user\" ]; then \
      echo removing *$branch* since author is $author; \
      git branch -D $branch; \
      echo; \
    fi; \
  done'"
	cleanupminesamecommitmessage = "!bash -c 'current_user=$(git config user.email);\
  for branch in $(git branch --format=\"%(refname:short)\"); do \
    if [[ \"$branch\" =~ ^(main|develop|master)$ ]]; then \
      continue; \
    fi; \
    author=$(git log -1 --format=\"%ae\" $branch); \
    if [ \"$author\" == \"$current_user\" ]; then \
		  last_commit_title=$(git log -1 --format=%s $branch); \
			if  git log --format=\"%s\" | grep -q \"$last_commit_title\" ; then \
				echo removing *$branch* since author is *$author* and existing title *$last_commit_title*; \
				git branch -D $branch; \
		  else \
				echo skip removing *$branch* since author is *$author* and no existing title *$last_commit_title*; \
		  fi; \
      echo; \
    fi; \
  done'"
	mgd = "!git merge $1 && git branch -d $1; #"
	mgdd = "!git merge $1 && git branch -d $1 && git push origin -d $1; #"
	loglasttwotags = "!git log $(git tag --sort=-v:refname | head -n 2 | tail -n 1)..$(git tag --sort=-v:refname | head -n 1) --format='%an %s' | sort"


[pull]
	ff = only
[init]
	defaultBranch = main
[merge]
	tool = meld
[safe]
	directory = /home/dule/trk/xceednet
