inherit_gem:
  standard: config/base.yml
# http://blog.trk.in.rs/2015/12/01/vim-tips/
# ~/.rubocop.yml is used when there is no local .rubocop.yml
# DISABLED since we are using standardrb now
# AllCops:
#   TargetRubyVersion: 2.7
#   Exclude:
#     - config/unicorn.rb
#     - db/schema.rb
#     - /home/orlovic/.rvm/**/*
#     - node_modules/**/*
#     - db/migrate/*
# 
# # 'class ActionDispatch::IntegrationTest' in single line, no need two lines
# Style/ClassAndModuleChildren:
#   Enabled: false
# 
# # it is OK that code explains instead class documentation
# Style/Documentation:
#   Enabled: false
# 
# # config, tasks and test for setup data could be very long
# Metrics/BlockLength:
#   Exclude:
#     - 'lib/**/*'
#     - 'test/**/*'
#     - 'config/**/*'
# 
# # big test big ABC size
# Metrics/AbcSize:
#   Max: 25
#   Exclude:
#     - 'test/**/*'
# 
# # line length is not important in db and tests
# Layout/LineLength:
#   Max: 135
#   Exclude:
#     - 'db/**/*'
#     - 'test/**/*'
#     - 'spec/**/*'
# 
# # put comma after each line [1,]
# Style/TrailingCommaInArrayLiteral:
#   Enabled: false
# 
# # put comma after each line {a:1,}
# Style/TrailingCommaInHashLiteral:
#   Enabled: false
# 
# # also in arguments
# Style/TrailingCommaInArguments:
#   Enabled: false
# 
# # methods in 10 lines are OK but some are bigger
# Metrics/MethodLength:
#   Max: 15
#   Exclude:
#     - 'lib/**/*'
#     - 'test/**/*'
# 
# # classes could be huge in tests
# Metrics/ClassLength:
#   Exclude:
#     - 'test/**/*'
# 
# # do not need to write # frozen_string_literal: true
# Style/FrozenStringLiteralComment:
#   Enabled: false
# 
# # Rails:
# #   Enabled: true
# 
# # Rails/FilePath:
# #   Enabled: false
# 
# # errors.add(:base, 'Failed') and return false # no need to use &&
# Style/AndOr:
#   Enabled: false
# 
# # assert_match /regexp/, response.body # no need for parenthesis
# Lint/AmbiguousRegexpLiteral:
#   Enabled: false
# 
# # users.map &:id # no need users.map(&:id)
# Lint/AmbiguousOperator:
#   Enabled: false
# 
# # s = %q{Hi} # no need to use `%q` only for strings that contain both single quotes and double quotes
# # Style/UnneededPercentQ:
# # Style/RedudantPercentQ:
# #   Enabled: false
# 
# # class Post < ActiveRecord::Base # no need to subclass `ApplicationRecord`
# # Rails/ApplicationRecord:
# #   Enabled: false
# 
# # $:.push File.expand_path('lib', __dir__) # no need to use $LOAD_PATH
# Style/SpecialGlobalVars:
#   Enabled: false
# 
# # in scripts I like to define methods at the end using BEGIN block
# Style/BeginBlock:
#   Enabled: false
# 
# # use refute_ instead of assert_not _ in minitest
# # Rails/RefuteMethods:
# #   Enabled: false
# 
# # Style/LambdaCall:
# #   Enabled: false
# # method(*%i[a b])
# # Lint/UnneededSplatExpansion:
# # Lint/RedudantSplatExpansion:
# #   Enabled: false
# 
# # for hash arguments, no need for space: assert_equal({a: 1}, result)
# # https://gist.github.com/Integralist/3822807d3c91281af22d
# # Layout/SpaceInsideHashLiteralBraces:
# #   EnforcedStyle: no_space
# 
# # Enable double quote
# Style/StringLiterals:
#   Enabled: false
# 
# # # new pending cops
# # Style/HashEachMethods:
# #   Enabled: true
# # Style/HashTransformKeys:
# #   Enabled: true
# # Style/HashTransformValues:
# #   Enabled: true
